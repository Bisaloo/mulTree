\name{read.mulTree}
\alias{read.mulTree}

\title{Reads MCMC objects from mulTree function}

\description{Reads MCMC objects from mulTree function stored out of R environment}

\usage{
read.mulTree(mulTree.mcmc, convergence=FALSE, model=FALSE, extract=NULL)
}

\arguments{
\item{mulTree.mcmc}{A MCMC chain written by the \code{mulTree} function.
    Can be either a unique file or a chain name referring to multiple files.}

\item{convergence}{Logical, whether to read the convergence file associated (default=\code{FALSE}).}

\item{model}{Logical, if \code{mulTree.mcmc} is not a chain name, whether to input the \code{MCMCglmm} model or the list of random and fixed terms only (default=FALSE)}

\item{extract}{The name of one or more elements to extract from each model (default=NULL)}
}

\details{
\code{model=TRUE} can be used to load the \code{MCMCglmm} object of a unique chain. The resulting object can be then summarized or plotted as S3 method for class \code{'MCMCglmm'}.
}

\seealso{\link{summary.mulTree}, \link{plot.mulTree}}

\examples{
## Not run:
##Before the analysis:
##create a data.frame
data_table<-data.frame(taxa=LETTERS[1:5], var1=rnorm(5), var2=c(rep('a',2), rep('b',3)))
#Creates a list of trees
trees_list<-list()
for (i in 1:2) {trees_list[[i]]<-rcoal(5, tip.label=LETTERS[1:5])}
class(trees_list)<-'multiPhylo'
#priors
prior<-list(R = list(V = 1/2, nu=0.002), G = list(G1=list(V = 1/2, nu=0.002)))
#mulTree
mulTree(as.mulTree(data_table, trees_list, species="taxa"), var1~var2, param=c(10000, 10, 2500), priors=prior, verbose=FALSE, output="dummy_ex")
##The models are saved out of R environment under the "dummy_ex" chains names.

##Reading only one model
model<-read.mulTree("dummy_ex_tree1_chain1", model=TRUE)
plot(model)

##Reading the convergence diagnosis for tree 1
read.mulTree("dummy_ex_tree1", convergence=TRUE)

##Reading all the models
all_chains<-read.mulTree("dummy_ex")
summary(all_chains)

##Reading the error term and the Tune of each model
read.mulTree("dummy_ex", extract=c("error.term", "Tune"))

##Remove the generated files from the current directory
file.remove(list.files(pattern="dummy_ex"))
## End(Not run)
}

\author{Thomas Guillerme}



